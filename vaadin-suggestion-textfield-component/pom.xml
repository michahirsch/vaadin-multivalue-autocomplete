<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>com.bosch.example</groupId>
      <artifactId>rsql-suggestion-parent</artifactId>
      <version>0.0.1-SNAPSHOT</version>
   </parent>

   <artifactId>vaadin-suggestion-textfield-component</artifactId>
   <packaging>jar</packaging>
   <name>vaadin-multivalue-autocomplete</name>
   <description>Demo project Vaadin Autocomplete Textfield</description>

   <build>
      <plugins>
         <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <version>${vaadin.plugin.version}</version>
            <configuration>
               <extraJvmArgs>-Xmx1g -Xss1024k</extraJvmArgs>
               <!-- We are doing "inplace" gwt compilation but into subdir VAADIN/widgetsets -->
               <webappDirectory>src/main/resources/VAADIN/widgetsets</webappDirectory>
               <hostedWebapp>src/main/resources/VAADIN/widgetsets</hostedWebapp>
               <warSourceDirectory>src/main/resources</warSourceDirectory>
               <noServer>true</noServer>
               <!-- Remove draftCompile when project is ready -->
               <draftCompile>false</draftCompile>
               <persistentunitcachedir>${project.build.directory}/gwtdirt</persistentunitcachedir>
               <compileReport>true</compileReport>
               <style>OBF</style>
               <strict>true</strict>
               <!-- Symbol maps etc, not needed in vaadin app, just target them outside war -->
               <deploy>${project.build.directory}/gwt-deploy</deploy>
            </configuration>
            <executions>
               <execution>
                  <phase>process-classes</phase>
                  <configuration>
                     <!-- if you don't specify any modules, the plugin will find them -->
                     <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> </modules> -->
                  </configuration>
                  <goals>
                     <goal>resources</goal>
                     <goal>update-theme</goal>
                     <goal>update-widgetset</goal>
                     <goal>compile-theme</goal>
                     <goal>compile</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <phase>process-classes</phase>
                  <configuration>
                     <target>
                        <copy todir="${project.build.directory}/classes/VAADIN/widgetsets">
                           <fileset dir="${basedir}/src/main/resources/VAADIN/widgetsets" includes="**/*" />
                        </copy>
                     </target>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <dependencies>

      <dependency>
         <groupId>com.bosch.example</groupId>
         <artifactId>rsql-suggestion-api</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-server</artifactId>
      </dependency>
      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-themes</artifactId>
      </dependency>
      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-client</artifactId>
      </dependency>
      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-push</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.validation</groupId>
         <artifactId>validation-api</artifactId>
      </dependency>
   </dependencies>
</project>